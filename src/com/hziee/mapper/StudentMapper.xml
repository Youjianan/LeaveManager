<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hziee.mapper.StudentMapper">
    <select id="findStudentById" parameterType="String" resultType="Student">
        select * from student where stu_id = #{stu_id}
    </select>

    <update id="updatePwdById" parameterType="String">
        update student set pwd = #{pwd} where stu_id = #{id}
    </update>

    <insert id="addVacate" parameterType="Vacate">
        insert into vacate (vacate_id,stu_id,stu_name,term,submit_time,start_time,end_time,period,type,result,course_list,step)
        values (#{vacate_id},#{stu_id},#{stu_name},#{term},#{submit_time},#{start_time},#{end_time},#{period},#{type},#{result},#{course_list},#{step})
    </insert>

    <insert id="addStudentVacate" parameterType="StudentVacate">
        insert into student_vacate (stu_id,vacate_id)
        values (#{stu_id},#{vacate_id})
    </insert>

    <insert id="addTutorVacate" parameterType="TutorVacate">
        insert into tutor_vacate (tutor_id,vacate_id)
        values (#{tutor_id},#{vacate_id})
    </insert>

    <select id="findTutorByGrade" parameterType="String" resultType="String">
        select tutor_id from grade where grade_id = #{grade_id}
    </select>

    <select id="findCourse" parameterType="Map" resultType="String">
        select name from course where week &gt;= #{start_week} and week &lt;= #{end_week} and course_id in
        <foreach item="item" index="index" collection="course_list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="findCheckingVacate" parameterType="String" resultType="Vacate">
        select student_vacate.vacate_id,student_vacate.stu_id,stu_name,term,submit_time,start_time,end_time,period,type,result,course_list,step,status
        from student_vacate join vacate on student_vacate.vacate_id = vacate.vacate_id
        where status = 0 and student_vacate.stu_id = #{stu_id}
    </select>

    <select id="findPassVacate" parameterType="String" resultType="Vacate">
        select student_vacate.vacate_id,student_vacate.stu_id,stu_name,term,submit_time,start_time,end_time,period,type,result,course_list,step,status
        from student_vacate join vacate on student_vacate.vacate_id = vacate.vacate_id
        where status = 1 and student_vacate.stu_id = #{stu_id}
    </select>

    <select id="findFailVacate" parameterType="String" resultType="Vacate">
        select student_vacate.vacate_id,student_vacate.stu_id,stu_name,term,submit_time,start_time,end_time,period,type,result,course_list,step,status
        from student_vacate join vacate on student_vacate.vacate_id = vacate.vacate_id
        where status = -1 and student_vacate.stu_id = #{stu_id}
    </select>

    <select id="findByTime" parameterType="Map" resultType="Vacate">
        select student_vacate.vacate_id,student_vacate.stu_id,stu_name,term,submit_time,start_time,end_time,period,type,result,course_list,step,status
        from student_vacate join vacate on student_vacate.vacate_id = vacate.vacate_id
        where vacate.stu_id = #{stu_id} and start_time &gt;= #{start_time} and end_time &lt;= #{end_time}
    </select>

    <select id="findByTerm" parameterType="Map" resultType="Vacate">
        select student_vacate.vacate_id,student_vacate.stu_id,stu_name,term,submit_time,start_time,end_time,period,type,result,course_list,step,status
        from student_vacate join vacate on student_vacate.vacate_id = vacate.vacate_id
        where vacate.stu_id = #{stu_id} and term = #{term}
    </select>

    <select id="findByType" parameterType="Map" resultType="Vacate">
        select student_vacate.vacate_id,student_vacate.stu_id,stu_name,term,submit_time,start_time,end_time,period,type,result,course_list,step,status
        from student_vacate join vacate on student_vacate.vacate_id = vacate.vacate_id
        where vacate.stu_id = #{stu_id} and type = #{type}
    </select>
    
    <select id="findVacate" parameterType="Map" resultType="Vacate">
        select student_vacate.vacate_id,student_vacate.stu_id,stu_name,term,submit_time,start_time,end_time,period,type,result,course_list,step,status
        from student_vacate join vacate on student_vacate.vacate_id = vacate.vacate_id
        <where>
            <if test="stu_id != null and stu_id != ''">
                and vacate.stu_id = #{stu_id}
            </if>
            <if test="start_time != null and start_time != ''">
                and start_time &gt;= #{start_time}
            </if>
            <if test="end_time != null and end_time != ''">
                and end_time &lt;= #{end_time}
            </if>
            <if test="term != null and term != ''">
                and term = #{term}
            </if>
            <if test="type != null and type != ''">
                and type = #{type}
            </if>
        </where>
        limit #{start},#{size}
    </select>

    <select id="findCount" parameterType="Map" resultType="Integer">
        select count(*) from vacate
        <where>
            <if test="stu_id != null and stu_id != ''">
                and stu_id = #{stu_id}
            </if>
            <if test="start_time != null and start_time != ''">
                and start_time &gt;= #{start_time}
            </if>
            <if test="end_time != null and end_time != ''">
                and end_time &lt;= #{end_time}
            </if>
            <if test="term != null and term != ''">
                and term = #{term}
            </if>
            <if test="type != null and type != ''">
                and type = #{type}
            </if>
        </where>
    </select>
</mapper>